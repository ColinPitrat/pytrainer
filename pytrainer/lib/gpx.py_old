# -*- coding: iso-8859-1 -*-

#Copyright (C) Fiz Vazquez vud1@sindominio.net

#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

import sys
import string
import math
import re
import os

class Gpx:
	def __init__(self, data_path = None, filename = None):
		self.data_path = data_path
		self.filename = filename
	
	def gpx2pytrainer(self):
		stylefile = self.data_path+"pytrainer.style"
		os.system("gpsbabel -t -i gpx -f %s -o xcsv,style=%s -F /tmp/gps.txt" %(self.filename, stylefile))
		return self.getValues("/tmp/gps.txt")

	def getValues(self,pytrainerfile):
		numline=0
		fh = open(pytrainerfile)
		fh2 = open("/tmp/medicion.txt","w")

		last_lat = "False"
		last_lon = "False"
		last_time = "False"
		total_dist = 0

		line = fh.readline()
		total_time = 0

		while line:
			#line_arr = re.match("([^ ]*)[^\d-]*([^ ]*)[^\d-]*([^ ]*) ([^\n]*) ",line)
			line_arr = re.match("([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*)([^\n])",line)
			if len(line_arr.group(3)) < 15:
				tmp_alt = int(line_arr.group(3))
	
			tmp_time = int(line_arr.group(4))
			print tmp_time
			if last_time != "False":
				time = tmp_time - last_time
				print "la distancia de segundos entre %d y %d es de %d" %(tmp_time,last_time,time)
				if time < 60:
					total_time += time
				else:
					total_time += 13
	
			#evitamos los puntos blancos
			if (float(line_arr.group(1)) < -0.001) or (float(line_arr.group(1)) > 0.0000001):
				tmp_lat = float(line_arr.group(1))*0.01745329252
				tmp_lon = float(line_arr.group(2))*0.01745329252

				if last_lat != "False":
					tempnum=(math.sin(last_lat)*math.sin(tmp_lat))+(math.cos(last_lat)*math.cos(tmp_lat)*math.cos(tmp_lon-last_lon))
					try:
						dist=math.acos(tempnum)*111.302*57.29577951
						total_dist += dist
						linewrite = "%f %d %s\n" %(total_dist,tmp_alt, total_time)
						linewrite =linewrite.replace(".",",")
						fh2.write(linewrite)
						#print "escribimos"
						#write(fh2,"%f %f" %(total_dist,tmp_alt))
					except:
						print tempnum
				last_lat = tmp_lat
				last_lon = tmp_lon
		
			last_time = tmp_time
			line = fh.readline()

		fh.close
		fh2.close
		print total_dist, total_time
		return total_dist, total_time
	
