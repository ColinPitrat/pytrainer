#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-

#Copyright (C) Fiz Vazquez vud1@sindominio.net

#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

import gettext
import sys
import pygtk
pygtk.require('2.0')
import gtk.glade
import os
import glob
import commands

def _max(one, two):
    '''Function to determine the max of two versions of format /xx/xxx/????-1.2.3 '''
    if one is None:
        return two
    elif two is None:
        return one
    try:
        one_v = os.path.basename(one).split('-')[1]
        two_v = os.path.basename(two).split('-')[1]
    except IndexError:
        #Got format that doesnt fit what we expect
        #Do simple comparison
        if os.path.basename(one) > os.path.basename(two):
            return one
        else:
            return two
    

    one_v_nos = one_v.split('.')
    two_v_nos = two_v.split('.')

    for index, no in enumerate(one_v_nos):
        if index >= len(two_v_nos):
            return one
        elif no > two_v_nos[index]:
            return one
        elif no < two_v_nos[index]:
            return two
        else:
            pass
    if len(one_v_nos) >= len(two_v_nos):
        return one
    return two


bin_path = os.path.realpath(os.path.dirname(__file__)) # directory that the pytrainer script executes from e.g. /usr/bin or /usr/local/bin
base_path = os.path.dirname(bin_path) 

if (os.path.exists(base_path + "/INSTALL") 
    and os.path.exists(base_path + "/setup.py") 
    and os.path.exists(base_path + "/pytrainer/main.py")
    and os.path.exists(base_path + "/locale")):
    print("running pytrainer from source path")
    data_path = base_path + "/"
    site_path = base_path
    gettext_path = base_path + "/locale"
else:
    print("running pytrainer from egg installation")
    data_path = base_path + "/share/pytrainer/"
    site_path = base_path + "/lib/python2.6/site-packages"
    gettext_path = base_path + "/share/locale"

print "data_path: " + data_path
print "gettext_path: " + gettext_path
print "site_path: " + site_path

gettext.bindtextdomain("pytrainer", gettext_path)
gtk.glade.bindtextdomain("pytrainer", gettext_path)
gtk.glade.textdomain("pytrainer")
gettext.textdomain("pytrainer")
gettext.install("pytrainer", gettext_path, unicode=1)

#ensure pytrainer directory is included in import path
sys.path.insert(0, site_path)
from pytrainer.main import pyTrainer

#Determine xulrunner location
xulrunners = glob.glob("/usr/li*/xulrunner*/xulrunner")
if len(xulrunners) == 0:
    #Didnt find any - fall back to old approach
    xul_env = commands.getstatusoutput("find /usr/li* -name xulrunner -exec dirname {} \; 2>/dev/null")[1]
elif len(xulrunners) == 1:
    #Found just one location - use that
    xul_env = os.path.dirname(xulrunners[0])
else:
    #Found more than one - need to choose one...
    max_version = None
    for item in xulrunners:
        xul_dir = os.path.dirname(item)
        max_version = _max(max_version, xul_dir)
    xul_env = max_version

print "Using xulrunner dir: %s" % xul_env
os.environ['MOZILLA_FIVE_HOME'] = xul_env

def main():
    pytrainer = pyTrainer(None, data_path)

if __name__ == "__main__":
        main()

